"use strict";if("undefined"==typeof dragula){var dragula;throw"Exception: dragula.js is undefined. Please add the library as a dependency to your project"}angular.module("tagsCategorizer",[]),angular.module("tagsCategorizer").directive("tagsCategorizer",["$parse","$document","$http","$timeout","$compile","$templateCache",function(a,b,c,d,e,f){return{restrict:"E",scope:{tagsGroups:"=tagsGroups",ungroupedTags:"=ungroupedTags",addGroup:"&addGroup",updateGroup:"&updateGroup",deleteGroup:"&deleteGroup",translations:"=translations",resolveOperation:"=resolveOperation",refreshData:"&refreshData"},templateUrl:"angular-tagscategorizer.html",controller:["$scope",function(a){var b=function(){return"_"+Math.random().toString(36).substr(2,9)};a.operationsControl=[],a.refreshDataError=!1;var c,e=function(){a.refreshData()};a.operationManagement={editGroup:function(f){d.cancel(c),c=d(function(){a.refreshDataError=!0,e()},4e3);var g=b();return f.waitOperation=g,a.operationsControl.push(g),g},deleteGroup:function(f,g){c=d(function(){a.refreshDataError=!0,e()},4e3);var h=b();return g.waitOperation=h,a.operationsControl.push(h),h},moveTag:function(a,b){},resolve:function(b){d.cancel(c);var e=b[0];if(""===e)return!1;var f=a.operationsControl.indexOf(e);f>-1&&(a.tagsGroups.forEach(function(c,d){return c.waitOperation===e?b[1]?(a.tagsGroups.splice(d,1),a.operationsControl.splice(f,1),a.makeVisible(0),!1):(c.waitOperation=!1,a.operationsControl.splice(f,1),!1):void(c.tags&&c.tags.forEach(function(b){b.waitOperation===e&&(b.waitOperation=!1,a.operationsControl.splice(f,1))}))}),a.ungroupedTags.forEach(function(b){b.waitOperation===e&&(b.waitOperation=!1,a.operationsControl.splice(f,1))}))}},a.newGroup="",a.renameGroup=[],a.i18n=a.translations||{uncateg:"Uncategorized tags",newgroup:"Add new Group",operationError:"Operation error, refreshing all data."},a.nameRx=/^[a-zA-Z0-9 ]{3,25}$/,a.addNewGroup=function(){void 0!==a.newGroup&&a.newGroup.length>3&&(a.addGroup({group:{name:a.newGroup,tags:[],"short":a.newGroup.toLowerCase()}}),a.newGroup="")},a.checkAddNew=function(b){13==b.keyCode&&a.addNewGroup()},a.checkRenameGroup=function(b,c){return angular.element(b.srcElement).hasClass("ng-invalid-pattern")&&13==b.keyCode?(d(function(){a.$digest()},100),!1):void(13==b.keyCode&&a.editGroup(b,c))},a.editGroup=function(b,c){if(b.preventDefault(),b.stopPropagation(),a.renameGroup[c]){if(""===a.tagsGroups[c].name)return!1;a.updateGroup({group:a.tagsGroups[c],operationId:a.operationManagement.editGroup(a.tagsGroups[c])})}a.renameGroup[c]=!a.renameGroup[c]},a.stopEvent=function(a){a.stopPropagation(),a.preventDefault()},a.deleteConf=0,a.deleteTagGroup=function(b,c,d){a.deleteConf+=1,a.deleteConf>=2&&d&&(a.ungroupedTags=a.ungroupedTags.concat(a.tagsGroups[c].tags),a.deleteGroup({group:a.tagsGroups[c],operationId:a.operationManagement.deleteGroup(c,a.tagsGroups[c])}),a.deleteConf=0),a.deleteConf>=2&&!d&&(a.deleteConf=0)},a.makeVisible=function(b){return a.renameGroup.indexOf(!0)>-1?!1:void 0===a.tagsGroups||0===a.tagsGroups.length?!1:(a.tagsGroups.forEach(function(a){a.open=!1}),void(a.tagsGroups[b].open=!0))},a.removeAssignedTag=function(b,c){a.ungroupedTags.push(b.tags[c]),b.tags.splice(c,1),a.updateGroup({group:b,operationId:a.operationManagement.editGroup(b)})},a.addTagToGroup=function(b){a.tagsGroups.forEach(function(c,d){c.open&&(c.tags.push(a.ungroupedTags[b]),a.ungroupedTags.splice(b,1),a.updateGroup({group:a.tagsGroups[d],operationId:a.operationManagement.editGroup(a.tagsGroups[d])}))})},a.modelActions=function(b,c,e,f,g){var h,i=function(a,b,c){c?a.splice(c,0,b):a.push(b)};b?(a.tagsGroups[e].tags.splice(c[0],1),i(a.ungroupedTags,c[1],g),h=a.tagsGroups[e]):(i(a.tagsGroups[f].tags,c[1],g),a.ungroupedTags.splice(c[0],1),h=a.tagsGroups[f]),d(function(){a.$apply()},80),a.updateGroup({group:h,operationId:a.operationManagement.editGroup(h)})}}],link:function(a,b,c){var e,f=function(b,c,d,f){e=angular.element(b);var g,h,i,j,k=[angular.element(b).attr("data-index"),angular.element(b).attr("data-tag")];angular.element(c).hasClass("ungrouped-tags")?(g=!0,i=angular.element(d).parent().attr("data-index"),h="unused"):(g=!1,h=angular.element(c).parent().attr("data-index"),i="unused"),f&&(j=angular.element(f).attr("data-index")),a.modelActions(g,k,i,h,j)};a.removeTag=function(){e.remove()};var g=dragula({isContainer:function(a){return!1},moves:function(a,b,c,d){return!0},accepts:function(a,b,c,d){return!0},invalid:function(a,b){return!1},direction:"vertical",copy:!1,copySortSource:!1,revertOnSpill:!0,removeOnSpill:!1,mirrorContainer:document.body,ignoreInputTextSelection:!0});g.on("drag",function(a){}).on("shadow",function(a,b,c){}).on("remove",function(a,b,c){}).on("drop",function(a,b,c,d){return b==c?!1:(f(a,b,c,d),void g.cancel(!0))}).on("over",function(a,b){angular.element(b).addClass("ar-tags-over")}).on("out",function(a,b){angular.element(b).removeClass("ar-tags-over")}),a.$watchCollection("tagsGroups",function(b,c){a.refreshDataError=!1,void 0!==b&&b.length>0&&angular.isArray(b)&&d(function(){for(var a=0;a<b.length;a++)g.containers.push(document.querySelector(".bag"+a+" .tags"))},100)}),a.$watchCollection("ungroupedTags",function(c,e){a.refreshDataError=!1,void 0!==c&&c.length>0?d(function(){var a=angular.element(b.children().children().children()[1])[0];g.containers.push(a)},100):a.ungroupedTags=[]}),a.$watch("resolveOperation",function(b,c){a.operationManagement.resolve(b)})}}}]),angular.module("tagsCategorizer").run(["$templateCache",function(a){a.put("angular-tagscategorizer.html",'<div class="ar-tags-categorizer">\n    <div class="row">\n\n        <div class="groups-list col-md-6">\n\n            <div class="add-group">\n                <form name="groupName">\n\n                    <input type="text"\n                           ng-model="newGroup"\n                           placeholder="{{i18n.newgroup}}"\n                           ng-keypress="checkAddNew($event)"\n                           ng-pattern="nameRx"\n                           name="gName">\n                    <button ng-click="addNewGroup()"\n                            ng-disabled="groupName.gName.$error.pattern">\n                        <i class="fa fa-plus"></i>\n                    </button>\n\n                </form>\n\n            </div>\n\n            <div class="add-group error" ng-if="refreshDataError">\n                <i class="fa fa-exclamation-triangle"></i> {{i18n.operationError}} <i class="fa fa-exclamation-triangle"></i>\n            </div>\n\n            <div class="bags" ng-init="makeVisible(0)">\n                <div\n                     ng-repeat="group in tagsGroups track by $index"\n                     class="bag clearfix bag{{$index}}"\n                     id="bag bag{{$index}}"\n                     ng-click="makeVisible($index)"\n                     ng-class="{\'waiting\': group.waitOperation}"\n                     data-gid="{{group.id}}"\n                     data-index="{{$index}}">\n                    <!--ng-init="hookGroups($last)"-->\n                    <div class="title clearfix">\n\n                        <span ng-if="!renameGroup[$index]">{{group.name}}</span>\n                        <input type="text" class="rename"\n                               ng-model="group.name"\n                               ng-click="stopEvent($event)"\n                               ng-pattern="nameRx"\n                               ng-keypress="checkRenameGroup($event, $index, group.name)"\n                               ng-if="renameGroup[$index] && group.open">\n                        <div class="pull-right">\n                            <button class="edit-group"\n                                    ng-if="group.open"\n                                    ng-disabled="deleteConf > 0"\n                                    ng-click="editGroup($event, $index)"><i class="fa fa-pencil-square-o"></i></button>\n\n                            <button class="remove-group confirm"\n                                  ng-if="deleteConf && group.open"\n                                  ng-disabled="renameGroup[$index]"\n                                  ng-click="deleteTagGroup($event, $index, true)">\n                                <i class="fa fa-check"></i>\n                            </button>\n                            <button class="remove-group"\n                                  ng-class="{\'confirm-deletion\': deleteConf > 0}"\n                                  ng-if="group.open"\n                                  ng-disabled="renameGroup[$index]"\n                                  ng-click="deleteTagGroup($event, $index)">\n                                <i class="fa fa-times"></i>\n                            </button>\n\n                            <button type="button" class="btn btn-info nr-tags">{{group.tags.length}} <i class="fa fa-tags"></i></button>\n\n                            <i class="arrow glyphicon" ng-class="{\'glyphicon-chevron-down\': group.open, \'glyphicon-chevron-right\': !group.open}"></i>\n                        </div>\n\n                    </div>\n\n                    <div class="tags clearfix"\n                         ng-show="group.open"\n                         ng-class="{\'confirm-deletion\': deleteConf > 0}">\n\n                          <span class="tag"\n                                ng-repeat="tag in group.tags track by $index"\n                                data-tag="{{tag}}"\n                                data-index="{{$index}}">\n                              <!--ng-init="hookTags($last)"-->\n                            <i class="fa fa-tag"></i> {{tag}} <i ng-click="removeAssignedTag(group, $index)" class="glyphicon glyphicon-remove"></i>\n                          </span>\n                    </div>\n\n                </div>\n            </div>\n\n        </div>\n\n        <div class="ungrouped-tags col-md-6">\n            <h4>{{i18n.uncateg}}</h4>\n            <span class="unsel-tag"\n                  ng-repeat="tag in ungroupedTags track by $index"\n                  data-tag="{{tag}}"\n                  data-index="{{$index}}"\n                  ng-click="addTagToGroup($index)"\n                    >\n                <i class="fa fa-tag"></i> {{tag}} <i ng-click="removeAssignedTag(group.tags, $index)" class="glyphicon glyphicon-remove"></i>\n            </span>\n        </div>\n\n    </div>\n</div>')}]);